# Citation:     26 U.S.C. 152 (2011)
# Namespace:    Hammurabi.USC.Tit26.Sec152
# Summary:      Determines whether one person is the "dependent" of another under IRC, Section 152.
# Remarks:      Subsections c4, d3-5, e, and f have not been modeled.  
# Updated:      2012-06-01
# Author:       Michael Poulshock


# >>Can/did {2} claim {1} as a dependent (for tax purposes)?
Tbool? IsDependentOf(Thing d, Thing tp) =
    ...
        IsQualifyingChildOf(d, tp) | 
        IsQualifyingRelativeOf(d, tp)
    &
    !CannotBeADependentOf(d, tp)


# QUALIFYING CHILD
    
# >>Is/was {1} a 'qualifying child' of {2} for dependency purposes?
Tbool? IsQualifyingChildOf(Thing d, Thing tp) =    
    QCGenTest(d, tp, taxYear) &
    QCRelationTest(d, tp) &
    QCAgeTest(d, tp, taxYear) &
    if CanBeClaimedAsQCByTwoTaxpayers(d) then Stub()

    Tnum taxYear = Sec441.TaxYear(tp)

    
# Qualifying child - c1 - general elements (excluding those in c2, c3, and c4)
Tbool QCGenTest(Thing d, Thing tp, Tnum taxYear) =
    Econ.SharePrincipalAbode(d,tp).TotalElapsedDaysPer(taxYear) > 182.5 &
    Econ.PercentSelfSupport(d) < 50 &        # per TY
    ...
        !Sec6013.IsMFJ(d) | 
        Sec6013.FilesMFJOnlyToClaimRefund(d)
    
    
# Qualifying child - c2 - relationship test
Tbool QCRelationTest(Thing d, Thing tp) =
    Fam.IsParentOf(tp,d) |
    Fam.IsGrandparentOf(tp,d) |
    Fam.IsGreatGrandparentOf(tp,d) |
    Fam.AreSiblings(tp,d) |
    Fam.AreStepsiblings(tp,d)         # or descendant of sib or step-sib
        
        
# Qualifying child - c3 - age test
Tbool QCAgeTest(Thing d, Thing tp, Tnum taxYear) =
    ...
        Peo.Age(d) < Peo.Age(tp) &
        ...
            (Peo.Age(d) < 19).AlwaysPer(taxYear) | 
            ...
                Edu.IsStudent(d) &
                (Peo.Age(d) < 24).AlwaysPer(taxYear)
    |
    Sec22.IsPermanentlyAndTotallyDisabled(d)


# QUALIFYING RELATIVE
    
# Subsections d3 and d4 are omitted.
# >>Is/was {1} a 'qualifying relative' of {2} for dependency purposes?
Tbool? IsQualifyingRelativeOf(Thing d, Thing tp) =
    genTest & 
    relationTest & 
    d4Test

    # d1 - general elements (excluding those in d2-5)
    # gen test
    Tbool genTest = 
        ...
            Sec61.GrossIncome(d) == 0 |                                         # shortcut
            Sec61.GrossIncome(d) < IRS.Pub501.ExemptionAmountBeforePhaseout(d)  # See 26 USC 151(d)(3)(D)
        & 
        ! IsQualifyingChildOf(d, tp) &
        NotQualifyingChildOfAnyTaxpayer(d)
        
    # d2 - relationship test
    Tbool relationTest = 
        IsRelativeWhoDoesNotNeedToLiveWith(d, tp) |     # A-F
        ...
            Econ.SharePrincipalAbode(tp,d) &
            Econ.ShareHousehold(tp,d)                   # H - and not spouse
            
    # d4 - multiple support agreements 
    Tbool d4Test = 
        if AnotherTaxpayerProvidedSupportFor(d) then Stub()


# d2; see also Pub. 501, Qualifying Relative, "Relatives who do not need to live with you"
Tbool IsRelativeWhoDoesNotNeedToLiveWith(Thing relative, Thing tp) =
    Fam.IsParentOf(tp, relative) |             # A
    Fam.IsGrandparentOf(tp, relative) |
    Fam.IsGreatGrandparentOf(tp, relative) |
    Fam.AreSiblings(tp, relative) |            # B
    Fam.AreStepsiblings(tp, relative) |
    Fam.IsParentOf(relative, tp) |             # C
    Fam.IsGrandparentOf(relative, tp) |
    Fam.IsGreatGrandparentOf(relative, tp) |
    Fam.IsStepparentOf(relative, tp) |         # D
    Fam.IsAuntOrUncleOf(tp, relative) |        # E
    Fam.IsAuntOrUncleOf(relative, tp)          # F
        
        
# EXCEPTIONS
        
# Exceptions to whether a person can be a dependent. 152(b).
Tbool CannotBeADependentOf(Thing d, Thing tp) =
    !depTest | 
    !jointReturnTest | 
    !citizenshipTest

    # b1 - taxpayer cannot be a dependent & potential dependent cannot have a dependent
    # Note: searching the fact base for possible dependents and defining this test
    # recursively leads to infinite loops and probably is a case of overengineering.
    Tbool depTest =
        ! CanClaimSomeoneAsDependent(d) &
        ! CanBeClaimedAsDependentBySomeone(tp)
            
    # b2 - potential dependent cannot be married filing jointly
    # See IRS Publication 501 (2010), page 10.
    Tbool jointReturnTest = 
        if Sec6013.IsMFJ(d) then MFJOnlyForRefund(d)
            
    # b3A - citizenship status
    Tbool citizenshipTest = 
        Peo.IsUSCitizen(d) |
        Peo.IsUSResident(d) |
        Peo.IsResidentOf(d, "Canada") |
        Peo.IsResidentOf(d, "Mexico") | 
        adoptionTest

    # b3B - potential dependent must meet the citizenship test
    Tbool adoptionTest = 
        Fam.IsAdoptiveParentOf(tp,d) &
        Econ.SharePrincipalAbode(d,tp) &
        Econ.ShareHousehold(d,tp) &
        ...
            Peo.IsUSCitizen(tp) | 
            Imm.IsUSNational(tp)


# FIGURE OUT WHO CAN CLAIM A PERSON AS A DEPENDENT (RECURSIVE)            

# >>Can someone claim {1} as a dependent?
Tbool? CanBeClaimedAsDependentBySomeone(Thing p) =
    PeopleWhoMightClaimAsDependent(p).Exists(IsDependentOf(p,_))
    
# >>Who has financial or custodial responsibility for {1}?
Tset PeopleWhoMightClaimAsDependent(Thing p)
 
# >>Can {1} be claimed as a qualifying child by more than one taxpayer?
Tbool CanBeClaimedAsQCByTwoTaxpayers(Thing p) 
       

# INPUTS

Tbool NotQualifyingChildOfAnyTaxpayer(Thing d)

Tbool AnotherTaxpayerProvidedSupportFor(Thing d)
 
Tbool CanClaimSomeoneAsDependent(Thing d)

Tbool MFJOnlyForRefund(Thing d)

 
# UNIT TESTS

Test: Pub501_Simple1
- Thing c        # the child
- Thing t        # the taxpayer
- Fam.IsParentOf(t,c) = true
- Econ.LivesWith(c,t) = true
- Peo.DoB(c) = 2001-01-01
- Peo.IsDeceased(c) = false     #
- Peo.IsUSCitizen(c) = true
- USC.Tit26.Sec152.CanBeClaimedAsQCByTwoTaxpayers(c) = false
- Econ.PercentSelfSupport(c) = 0
- USC.Tit26.Sec152.CanClaimSomeoneAsDependent(c) = false
- USC.Tit26.Sec152.CanBeClaimedAsDependentBySomeone(t) = false
- USC.Tit26.Sec152.AnotherTaxpayerProvidedSupportFor(c) = false
- IRS.Pub501.GrossIncome(c) = 0
- Sec152.IsDependentOf(c,t).AsOf(2010-12-31).Out =?= "Unstated"

##
Test: Pub501_Simple2
- Things c, t    
- Fam.IsParentOf(t,c) = true
- Econ.LivesWith(c,t) = true
- Peo.DoB(c) = 2001-01-01
- Peo.DoB(t) = 1970-01-01
- Peo.IsDeceased(c) = false     #
- Peo.IsUSCitizen(c) = true
- USC.Tit26.Sec152.CanBeClaimedAsQCByTwoTaxpayers(c) = false
- Econ.PercentSelfSupport(c) = 0
- USC.Tit26.Sec152.CanClaimSomeoneAsDependent(c) = false
- USC.Tit26.Sec152.CanBeClaimedAsDependentBySomeone(t) = false
- AnotherTaxpayerProvidedSupportFor(c) = false
- USC.Tit26.Sec2.FedTaxFilingStatus(t) = "Single"
- IRS.Pub501.GrossIncome(c) = 0
- Sec152.IsDependentOf(c,t).AsOf(2010-12-31).Out =?= true

# IRS Pub. 501 (2010), Page 10, Example 1.
# Cannot be a dependent because fails joint return test.
Test: Pub501_1
- Thing t        # Taxpayer
- Thing d         # T's daughter
- Thing s        # T's son-in-law
- Fam.FamilyRelationship(d,s) = "Spouse"
- FilesJointFedTaxReturnWith(d,s) = true
- FilesMFJOnlyToClaimRefund(d) = false
- Fam.IsParentOf(t,d) = true
- Econ.LivesWith(t,d) = true
- Peo.DoB(d) = 1992-01-01
- Mil.InArmedForces(s) = true
- Peo.IsUSCitizen(d) = true
- Sec152.IsDependentOf(d,t).AsOf(2010-12-31).Out =?= false

# IRS Pub. 501 (2010), Page 10, Example 2 (son).
Test: Pub501_2a
- Thing t        # Taxpayer
- Thing d         # T's daughter
- Thing s        # T's son-in-law
- FamilyRelationship(d,s) = "Spouse"
- FilesJointFedTaxReturnWith(d,s) = true
- FilesMFJOnlyToClaimRefund(d) = true
- IsParentOf(t,d) = true
- Peo.DoB(s) = 1992-01-01
- Peo.DoB(d) = 1992-01-01
- Peo.IsUSCitizen(s) = true
- CanClaimSomeoneAsDependent(s) = false
- CanBeClaimedAsDependentBySomeone(t) = false
- Sec152.CannotBeADependentOf(d,t).AsOf(2010-12-31).Out =?= false

# IRS Pub. 501 (2010), Page 10, Example 2 (daughter-in-law).
Test: Pub501_2b
- Thing t        # Taxpayer
- Thing d         # T's daughter-in-law
- Thing s        # T's son
- FamilyRelationship(d,s) = "Spouse"
- FilesJointFedTaxReturnWith(d,s) = true
- FilesMFJOnlyToClaimRefund(d) = true
- IsParentOf(t,d) = true
- Peo.DoB(s) = 1992-01-01
- Peo.DoB(d) = 1992-01-01
- Peo.IsUSCitizen(d) = true
- CanClaimSomeoneAsDependent(s) = false
- CanBeClaimedAsDependentBySomeone(t) = false
- Sec152.CannotBeADependentOf(d,t).AsOf(2010-12-31).Out =?= false

# IRS Pub. 501 (2010), Page 10, Example 3.
Test: Pub501_3
- Thing t        # Taxpayer
- Thing s         # Son
- Thing d        # Daughter-in-law
- Peo.DoB(s) = 1992-01-01
- Peo.DoB(d) = 1991-01-01
- FamilyRelationship(d,s) = "Spouse"
- Peo.IsUSCitizen(s) = true
- FilesJointFedTaxReturnWith(d,s) = true
- FileMFJOnlyToClaimRefund(s) = false
- CanClaimSomeoneAsDependent(s) = false
- CanBeClaimedAsDependentBySomeone(t) = false
- Sec152.CannotBeADependentOf(s,t).AsOf(2010-12-31).Out =?= true

# IRS Pub. 501 (2010), Page 11, Unnumbered example.
Test: Pub501_4
- Thing t         # Taxpayer
- Thing s        # Son
- Peo.DoB(s) = 1991-12-10
- IsFullTimeStudent(s) = false
- Peo.IsUSCitizen(s) = true
- IsPermanentlyAndTotallyDisabled(s) = false
- Sec152.IsDependentOf(s,t).AsOf(2010-12-31).Out =?= false

# IRS Pub. 501 (2010), Page 11, Unnumbered example.
Test: Pub501_5
- Thing t         # Taxpayer
- Thing s        # Son
- Peo.DoB(s) = 1991-12-10
- IsFullTimeStudent(s) = true
- Peo.IsUSCitizen(s) = true
- IsPermanentlyAndTotallyDisabled(s) = false
- Sec152.IsDependentOf(s,t).AsOf(2010-12-31).Out =?= true

# IRS Pub. 501 (2010), Page 11, Unnumbered example.
Test: Pub501_6
- Thing t         # Taxpayer
- Thing s        # Son
- Peo.DoB(s) = 1991-12-10
- IsFullTimeStudent(s) = false
- Peo.IsUSCitizen(s) = true
- IsPermanentlyAndTotallyDisabled(s) = true
- Sec152.IsDependentOf(s,t).AsOf(2010-12-31).Out =?= true

# IRS Pub. 501 (2010), Page 11, Example 1.
Test: Pub501_7
- Thing t        # Taxpayer
- Thing s        # T's spouse
- Thing b        # T's brother
- Peo.DoB(t) = 1989-01-01
- Peo.DoB(s) = 1989-01-01
- FamilyRelationship(t,s) = "Spouse"
- FamilyRelationship(b,t) = "Sibling"
- Peo.DoB(b) = 1987-01-01
- IsMarried(b) = false
- LivesWith(t,s) = true
- LivesWith(t,b) = true
- Peo.IsDisabled(b) = false
- AreFilingMFJ(t,s) = true
- Sec152.IsDependentOf(b,t).AsOf(2010-12-31).Out =?= false

# IRS Pub. 501 (2010), Page 11, Example 2.
Test: Pub501_8
- Thing t        # Taxpayer
- Thing s        # T's spouse
- Thing b        # T's brother
- Peo.DoB(t) = 1989-01-01
- Peo.DoB(s) = 1985-01-01
- FamilyRelationship(t,s) = "Spouse"
- FamilyRelationship(b,t) = "Sibling"
- Peo.DoB(b) = 1987-01-01
- IsFullTimeStudent(b) = true
- IsMarried(b) = false
- LivesWith(t,s) = true
- LivesWith(t,b) = true
- Peo.IsDisabled(b) = false
- AreFilingMFJ(t,s) = true
- Sec152.IsDependentOf(b,t).AsOf(2010-12-31).Out =?= true
##

Test: Basic_1
- Things tp, d
- Econ.LivesWith(tp,d) = true
- (Econ.SharePrincipalAbode(d,tp).TotalElapsedDaysPer(Sec441.TaxYear(tp)) > 182.5).AsOf(2012-01-01).Out =?= true

Test: Basic_2
- Things tp, d
- Econ.LivesWith(tp,d) = false
- (Econ.SharePrincipalAbode(d,tp).TotalElapsedDaysPer(Sec441.TaxYear(tp)) > 182.5).AsOf(2012-01-01).Out =?= false

Test: QCGenTest_1
- Things tp, d
- Econ.LivesWith(tp,d) = false
- Sec152.QCGenTest(d,tp,Sec441.TaxYear(tp)).AsOf(DateTime.Now).Out =?= false

Test: QCGenTest_1a
- Things tp, d
- Econ.LivesWith(tp,d) = false
- Econ.SharePrincipalAbode(d,tp).AsOf(2012-05-29).Out =?= false

Test: ShareHousehold
- Things a, b
- Econ.LivesWith(a,b) = true
- Econ.SharePrincipalAbode(a,b).Out =?= true

Test: QCGenTest_2
- Things tp, d
- Econ.LivesWith(tp,d) = true
- Econ.PercentSelfSupport(d) = 100
- Sec152.QCGenTest(d,tp,Sec441.TaxYear(tp)).AsOf(DateTime.Now).Out =?= false

Test: QCGenTest_3
- Things tp, d
- Econ.LivesWith(tp,d) = true
- Econ.PercentSelfSupport(d) = 0
- USC.Tit26.Sec2.FedTaxFilingStatus(d) = "not Married filing jointly"
- Sec152.QCGenTest(d,tp,Sec441.TaxYear(tp)).AsOf(DateTime.Now).Out =?= true

Test: QCGenTest_4
- Things tp, d
- Econ.LivesWith(tp,d) = true
- Econ.PercentSelfSupport(d) = 0
- USC.Tit26.Sec2.FedTaxFilingStatus(d) = "Married filing jointly"
- USC.Tit26.Sec6013.FilesMFJOnlyToClaimRefund(d) = true
- Sec152.QCGenTest(d,tp,Sec441.TaxYear(tp)).AsOf(DateTime.Now).Out =?= true

Test: QCGenTest_5
- Things tp, d
- Econ.LivesWith(tp,d) = true
- Econ.PercentSelfSupport(d) = 0
- USC.Tit26.Sec2.FedTaxFilingStatus(d) = "Married filing jointly" 
- USC.Tit26.Sec6013.FilesMFJOnlyToClaimRefund(d) = false    
- Sec152.QCGenTest(d,tp,Sec441.TaxYear(tp)).AsOf(DateTime.Now).Out =?= false

Test: QCRelationship_1
- Things tp, d
- Fam.FamilyRelationship(tp,d) = "Biological parent"
- Sec152.QCRelationTest(d,tp).AsOf(DateTime.Now).Out =?= true

Test: QCAge_1
- Things tp, d
- Peo.DoB(tp) = 1975-01-01
- Peo.DoB(d) = 2005-01-01
- IsStudent(d) = false
- USC.Tit26.Sec22.IsPermanentlyAndTotallyDisabled(d) = false
- Sec152.QCAgeTest(d,tp,Sec441.TaxYear(tp)).AsOf(2012-03-03).Out =?= true

Test: QCAge_2
- Things tp, d
- Peo.DoB(tp) = 1975-01-01
- Peo.DoB(d) = 1940-01-01
- IsStudent(d) = false
- USC.Tit26.Sec22.IsPermanentlyAndTotallyDisabled(d) = true
- Sec152.QCAgeTest(d,tp,Sec441.TaxYear(tp)).AsOf(2012-03-03).Out =?= true

