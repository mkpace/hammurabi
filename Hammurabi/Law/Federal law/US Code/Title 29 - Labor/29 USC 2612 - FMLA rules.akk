# Citation:     29 U.S.C. 2612 (2011)
# Namespace:    Hammurabi.USC.Tit29.Sec2612
# Summary:      Makes determinations related to the Family and Medical Leave Act (FMLA).
# Updated:      2012-06-01
# Author:       Michael Poulshock


# Indicates whether it is during the period in which an employee (e)
# is entitled to FMLA leave from corporation (c).
Tbool IsDuringEligiblePeriod(Thing e, Thing corp) =
    Stub()

# 2612(a) - Returns the number of weeks of FMLA leave to which an
# employee (e) at corporation (c) is entitled in a 12-month period.
Tnum NumberWeeksEntitled(Thing e, Thing corp) =
    set:
    if IsEntitledToServiceLeaveFrom(e, corp) -> 26
    if IsEntitledToRegLeaveFrom(e, corp) -> 12
    else 0
    
# 2612 - Indicates whether an employee (e) is eligible for 
# any FMLA leave from a corporation (c).
Tbool IsEntitledToLeaveFrom(Thing e, Thing c) =
    IsEntitledToRegLeaveFrom(e,c) |
    IsEntitledToServiceLeaveFrom(e,c)
                   
# 2612(a)(1) - Indicates whether an employee (e) is eligible for 
# "regular" (non-servicemember) FMLA leave from a corporation (c).
Tbool IsEntitledToRegLeaveFrom(Thing e, Thing c) =
    Sec2611.IsEligibleEmployee(e,c) &
    Sec2611.IsCoveredEmployer(c) &
    ...
        a1A(e,c) |
        a1B(e,c) |
        a1C(e,c) |
        a1D(e,c) |
        a1E(e,c)
        
# 2612(a)(1)(A) - Birth of child
Tbool a1A(Thing e, Thing c) =
    ReasonForLeave(e,c) == "Maternity or paternity"
    
# 2612(a)(1)(B) - Adopted / foster child
Tbool a1B(Thing e, Thing c) =
    reason == "To adopt a child" |
    reason == "To become a foster parent"

    Tstr reason = 
        ReasonForLeave(e,c)
    
# 2612(a)(1)(C) - Family member sick
Tbool a1C(Thing e, Thing c) =
    ReasonForLeave(e,c) == "To care for family member with a health condition" &
    ...
        Fam.AreMarried(e, SickFam(e)) |
        Sec2611.IsChildOf(SickFam(e), e) |
        Sec2611.IsParentOf(SickFam(e), e)
    &
    Sec2611.HasSeriousHealthCondition(SickFam(e))
    
# 2612(a)(1)(D) - Employee sick
Tbool a1D(Thing e, Thing c) =
    ReasonForLeave(e,c) == "Employee cannot work due to health condition" &
    Sec2611.HasSeriousHealthCondition(e)
          
# 2612(a)(1)(E) - Qualifying exigency / active duty
Tbool a1E(Thing e, Thing c) =
    ReasonForLeave(e,c) == "Other need arising due to family member serving in Armed Forces"

# 2612(a)(3) - Indicates whether an employee (e) is eligible for
# servicemember family leave from a corporation (c).
Tbool IsEntitledToServiceLeaveFrom(Thing e, Thing c) =
    ReasonForLeave(e,c) == "To care for a family member in the Armed Forces" &
    Sec2611.IsCoveredEmployer(c) &
    Sec2611.IsEligibleEmployee(e,c) &
    ...
        Fam.AreMarried(e,SickFam(e)) |
        Sec2611.IsChildOf(e,SickFam(e)) | 
        Sec2611.IsParentOf(e,SickFam(e)) |
        Fam.IsNextOfKinOf(e,SickFam(e))
                
# Returns a person's reason for requesting family leave from an employer.
# >>Why does/did {1} want to take leave from {2}? (Options: Maternity or paternity, To adopt a child, To become a foster parent, To care for family member with a health condition, Employee cannot work due to health condition, To care for a family member in the Armed Forces, Other need arising due to family member serving in Armed Forces, Other)
Tstr ReasonForLeave(Thing e, Thing c)
    
# Returns the person who the employee needs to take care of.
Thing SickFam(Thing e) =
    NeedsLeaveToProvideCareFor(e).ToThing

# >>Who does {1} need leave in order to take care of?
Tset NeedsLeaveToProvideCareFor(Thing e)


# UNIT TESTS

Test: 54153730
- Things t1, t2
- Econ.IsAirlineFlightCrew(t1,t2) = false
- USC.Tit5.Sec6301.IsEmployee(t1) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(t1,t2) = false
- USC.Tit29.Sec2611.DateLeaveBegins(t1,t2) = 2010-01-02
- Econ.EmploymentRelationship(t1,t2) = "None"
- USC.Tit29.Sec2612.IsEntitledToLeaveFrom(t1, t2).Out =?= false

Test: Test1
- Things e, c
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= "Unstated"

Test: Test2
- Things e, c
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "Other"
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= false

Test: Test3
- Things e, c
- Econ.EmploymentRelationship(e,c) = "None"
- Sec2612.IsEntitledToRegLeaveFrom(e,c).Out =?= false

Test: Test4
- Things e, c
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = false
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "Other"
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= false

Test: Test5
- Things e, c
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = false
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "To adopt a child"
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= "Unstated"

Test: Test6
- Things e, c
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = false
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "To adopt a child"
- USC.Tit29.Sec2611.DateLeaveBegins(e,c) = 2014-01-01
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= true

Test: Test7_FlightCrew
- Things e, c
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = true
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "To adopt a child"
- USC.Tit29.Sec2611.DateLeaveBegins(e,c) = 2014-01-01
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= "Stub"

Test: Test8_2612aC1_1
- Things e, c
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = false
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "To care for family member with a health condition"
- USC.Tit29.Sec2611.DateLeaveBegins(e,c) = 2014-01-01
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= "Unstated"

Test: Test8_2612aC1_2
- Things e, c, f
- Org.NumberOfEmployees(c) = 2000
- Econ.EmploymentRelationship(e,c) = "Employee"
- Econ.HoursWorkedPerWeek(e,c) = 40
- USC.Tit5.Sec6301.IsEmployee(e) = false
- USC.Tit29.Sec2611.LessThan50EmployeesWithin75MilesOfWorksite(e,c) = false
- Econ.IsAirlineFlightCrew(e,c) = false
- USC.Tit29.Sec2612.ReasonForLeave(e,c) = "To care for family member with a health condition"
- USC.Tit29.Sec2611.DateLeaveBegins(e,c) = 2014-01-01
- USC.Tit29.Sec2612.NeedsLeaveToProvideCareFor(e) = [[f]]
- Fam.AreMarried(e,f) = true
- USC.Tit29.Sec2611.HasSeriousHealthCondition(f) = true
- Sec2612.IsEntitledToRegLeaveFrom(e,c).AsOf(2011-04-15).Out =?= true

