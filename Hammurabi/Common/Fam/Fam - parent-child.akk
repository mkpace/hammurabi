# Namespace:    Hammurabi.Fam
# Summary:      Basic family relationships: parent-child
# Updated:      2012-09-16
# Author:       Michael Poulshock


# PARENT-CHILD RELATIONSHIPS: CORE INPUTS

# >>Who are {1}'s parents?
Tset ParentsOf(Thing p)

# >>Who are {1}'s children?
Tset ChildrenOf(Thing p)    

# >>Is {1} {2}'s parent?
Tbool IsParentOf(Thing p1, Thing p2) =
    ChildrenOf(p1).Contains(p2) |~
    ParentsOf(p2).Contains(p1) |~
    ...
        IsBiologicalParentOf(p1, p2) |
        IsAdoptiveParentOf(p1, p2) |
        IsFosterParentOf(p1, p2) |
        IsStepparentOf(p1, p2)
    

# PARENT-CHILD RELATIONSHIPS: DERIVED RULES

# Parents married on a particular date
Tbool ParentsMarriedAsOf(Thing p, Tdate date) =
    Fam.AreMarried(mom,dad).AsOf(date)
    
    Thing mom =
        MotherAsOf(p, date)
    
    Thing dad =
        FatherAsOf(p, date)

# Birth mother
Thing BirthMother(Thing p) =
    Fam.MotherAsOf(p, Peo.DoB(p))
    
# Mother on a particular date
# Warning: returns null if more than one mother
Thing MotherAsOf(Thing p, Tdate date) =
    ParentsOf(p).AsOf(date).Filter(IsMotherOf(_,p)).ToThing
    
# Is mother of
Tbool IsMotherOf(Thing p1, Thing p2) =
    Peo.IsFemale(p1) &
    IsParentOf(p1,p2)

# Birth father
Thing BirthFather(Thing p) =
    Fam.FatherAsOf(p, Peo.DoB(p))
    
# Father on a particular date
# Warning: returns null if more than one father
Thing FatherAsOf(Thing p, Tdate date) =
    ParentsOf(p).AsOf(date).Filter(IsFatherOf(_,p)).ToThing
    
# Is father of
Tbool IsFatherOf(Thing p1, Thing p2) =
    Peo.IsMale(p1) &
    IsParentOf(p1,p2)
    
# Experimental
Tset ParentsOfInferred(Thing p) =
    peopleBut(p).Filter(IsParentOf(_,p))
    
# Not strictly necessary but aids readability
Tbool IsChildOf(Thing p1, Thing p2) =
    IsParentOf(p2,p1)
            
# Biological parent
Tbool IsBiologicalParentOf(Thing p1, Thing p2) =
    Relationship(p1,p2) == "Biological parent" |~
    Relationship(p2,p1) == "Biological child"

# Causes rule above to short-circuit in interview
# Deeper fix: make Tvars into Func<Tvar>
FamilyRelationship(1,2) = "Biological parent" assumes FamilyRelationship(2,1) = "Biological child"
    
# Adoptive parent
Tbool IsAdoptiveParentOf(Thing p1, Thing p2) =
    Relationship(p1,p2) == "Adoptive parent" |~
    Relationship(p2,p1) == "Adopted child"

# Foster parent
Tbool IsFosterParentOf(Thing p1, Thing p2) =
    Relationship(p1,p2) == "Foster parent" |~
    Relationship(p2,p1) == "Foster child"

# Stepparent
Tbool IsStepparentOf(Thing p1, Thing p2) =
    Relationship(p1,p2) == "Stepparent" |~
    Relationship(p2,p1) == "Stepchild"

# >>Is/was {1} pregnant?
Tbool IsPregnant(Thing p)

IsPregnant(1) assumes Gender(1) = "Female"

# >>Is {1} unborn (i.e. a fetus)?
Tbool IsUnborn(Thing p)

# TODO: Prove...
# >>Is/was {1} of unknown parentage?
Tbool IsOfUnknownParentage(Thing p)


# PATERNITY, LEGITIMATION, ETC.

# Paternity established
Tbool PaternityEstablishedFor(Thing parent, Thing child) =
    Peo.IsMale(parent) &
    Peo.Age(parent) - Peo.Age(child) >= 12 &
    PaternityEstablishedForQ(parent,child) &
    Time.IsAtOrAfter(DatePaternityEstablishedFor(parent,child))

# >> Was {1}'s paternity of {2} established?
Tbool PaternityEstablishedForQ(Thing parent, Thing child)

# >>When was {1}'s paternity of {2} established?
Tdate DatePaternityEstablishedFor(Thing parent, Thing child)

# Born "out of wedlock"
Tbool BornOutOfWedlock(Thing p) =
    IsIllegitimate(p)
        
# >>Was {1} an illegitimate child?
Tbool IsIllegitimate(Thing p) =
    !ParentsMarriedAsOf(p, Peo.DoB(p))
    # unless child is born shortly after the parents' divorce
    # ...married as of date of conception?

# Assumption: could be done by either statute, court, or both
# >>Is/was {1} legitimated (under the law of {1}'s domicile)?
Tbool IsLegitimatedByLaw(Thing child)
    
# Legitimated by father (he acknowledged parental responsibility)
# Example of temporal value built from threshold facts and an event
Tbool Legitimated(Thing parent, Thing child) =
    IsFatherOf(parent, child) &
    IsIllegitimate(child) &
    LegitimatedQ(parent,child) &
    Time.IsAtOrAfter(DateLegitimated(parent,child))

# >>Does/did {1} legitimate {2}?
Tbool LegitimatedQ(Thing parent, Thing child) 
	
# >>When did {1} legitimate {2}?
Tdate DateLegitimated(Thing parent, Thing child)
    
# Legally committed to financially supporting 
Tbool CommittedToFinanciallySupport(Thing p1, Thing p2) =
    CommittedToFinanciallySupportQ(p1,p2) &
    Time.IsAtOrAfter(DateCommittedToFinanciallySupport(p1,p2))

# >>Is/was {1} legally committed to financially supporting {2}?	
Tbool CommittedToFinanciallySupportQ(Thing p1, Thing p2)
    
# >>When was {1} first legally committed to financially supporting {2}?
Tdate DateCommittedToFinanciallySupport(Thing parent, Thing child)        


# UNIT TESTS

Test: IsParentOf1
- Things kid, parent
- Fam.ChildrenOf(parent) = [[kid]]
- Fam.IsParentOf(parent,kid).Out =?= true

Test: IsParentOf2
- Things kid, parent
- Fam.FamilyRelationship(parent,kid) = "Biological parent"
- Fam.IsParentOf(parent,kid).Out =?= true

Test: IsParentOf3
- Things kid, aunt
- Fam.FamilyRelationship(aunt,kid) = "Aunt or uncle"
- Fam.IsParentOf(aunt,kid).Out =?= false

Test: IsParentOf4
- Things kid, parent
- Fam.IsParentOf(parent,kid).Out =?= "Unstated"

Test: IsParentOf5
- Things kid, parent
- Fam.ParentsOf(kid) = [[parent]]
- Fam.IsParentOf(parent,kid).Out =?= true

