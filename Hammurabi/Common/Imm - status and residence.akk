# Namespace:    Hammurabi.Imm
# Summary:      Basic facts related to immigration
# Updated:      2012-09-22
# Author:       Michael Poulshock


# COUNTRY OF CITIZENSHIP 

# TODO: Handle dual citizenship
# >>What is/was {1}'s country of citizenship?
Tstr CountryOfCitizenship(Thing p)

IsUSCitizen(1) assumes CountryOfCitizenship(1) = "United States"
USImmigrationStatus(1) = "U.S. citizen" assumes CountryOfCitizenship(1) = "United States"
    
    
# U.S. IMMIGRATION STATUS

# These rules consolidate all facts pertaining to immigration status
# into one point.  That way, a person's status can be asked or asserted
# as a single fact (Imm.Status).  If the user doesn't know that fact and 
# needs to probe down, they can investigate the rule tree below it.

# Note: IsUSCitizen() is defined in People - residence and citizenship.akk

# The following facts should be used in other rules:

# U.S. national (without U.S. citizenship)
Tbool IsUSNational(Thing p) =
    Status(p) == "U.S. national"
    
# Alien
Tbool IsAlien(Thing p) =
    ! Peo.IsUSCitizen(p) &
    ! IsUSNational(p)
    
# Legal permanent resident
Tbool IsLPR(Thing p) =
    Status(p) == "Legal permanent resident"

# Lawful non-immigrant
Tbool IsLawfulNonImmigrant(Thing p) =
    Stub()


# CORE IMMIGRATION STATUS RULES

# This rule is for brevity (Imm.Status instead of Imm.USImmigrationStatus)
Tstr Status(Thing p) = 
    USImmigrationStatus(p)

# Stopping point before descending into citizenship law
# >>What is/was {1}'s U.S. immigration status? (Options: U.S. citizen, U.S. national, Legal permanent resident, Asylee, Refugee, Temporary visitor, Undocumented immigrant)
Tstr? USImmigrationStatus(Thing p) = 
    set:
    if USC.Tit8.Gen.IsUSCitizenInferred(p) -> "U.S. citizen"
    if USC.Tit8.Gen.IsUSNationalInferred(p) -> "U.S. national"
    else AssignedStatus(p)

# >>What immigration status was {1} assigned by the Department of Homeland Security?
Tstr AssignedStatus(Thing p)


# OTHER FACTS

# >>What type of (nonimmigrant) visa did/does {1} have? (Options: A-1, A-2, A-3, B-1, B-2, C-1, C-2, C-3, CP, D, E-1, E-2, E-3, F-1, F-2, F-3, G-1, G-2, G-3, G-4, G-5, GB, GT, H-1B, H-1C, H-2A, H-3, H-4, I, J-1, J-2, K-1, K-2, K-3, K-4, L-1, L-2, M-1, M-2, M-3, N-8, N-9, NATO-1, NATO-2, NATO-3, NATO-4, NATO-5, NATO-6, NATO-7, O-1, O-2, O-4, P-1, P-2, P-3, P-4, Q-1, Q-2, Q-3, R-1, R-2, S-5, S-6, S-7, SIJS, TN, TD, T-1, T-2, T-3, T-4, U-1, U-2, U-3, U-4, V-1, V-2, V-3, WB, WT, None of the above)
Tstr NonimmigrantVisaType(Thing p)

# >>What type of visa did/does {1} want? (Options: A-1, A-2, A-3, B-1, B-2, C-1, C-2, C-3, CP, D, E-1, E-2, E-3, F-1, F-2, F-3, G-1, G-2, G-3, G-4, G-5, GB, GT, H-1B, H-1C, H-2A, H-3, H-4, I, J-1, J-2, K-1, K-2, K-3, K-4, L-1, L-2, M-1, M-2, M-3, N-8, N-9, NATO-1, NATO-2, NATO-3, NATO-4, NATO-5, NATO-6, NATO-7, O-1, O-2, O-4, P-1, P-2, P-3, P-4, Q-1, Q-2, Q-3, R-1, R-2, S-5, S-6, S-7, SIJS, TN, TD, T-1, T-2, T-3, T-4, U-1, U-2, U-3, U-4, V-1, V-2, V-3, WB, WT, None of the above)
Tstr DesiredVisaType(Thing p)

# >>Is/was {1} in compliance with the terms and conditions of their visa?
Tbool CompliedWithTermsOfVisa(Thing p)

# >>Is {1} a naturalized U.S. citizen?
Tbool IsNaturalizedCitizen(Thing p)

# >>Did {1} enter the U.S. without inspection?
Tbool EnteredUSWithoutInspection(Thing p) =
    Stub()

# >>Was {1} paroled into the U.S.?
Tbool ParoledIntoUS(Thing p) =
    Stub()

    

