# Namespace:    Hammurabi.Econ
# Summary:      Basic economic relationships related to employment.
# Updated:      2012-09-06
# Author:       Michael Poulshock


# NATURE OF EMPLOYMENT RELATIONSHIP

# >>Is/was {1} employed?
Tbool IsEmployed(Thing p)

# Indicates whether a person is employed by a particular employer (corporation).  
# It is assumed that "employee" does not include independent contractors.
Tbool IsEmployedBy(Thing p, Thing corp) =
    EmploymentRelationship(p, corp) == "Employee" 

# Person is an independent contractor at an employer
Tbool IsIndependentContractor(Thing p, Thing corp) =
    EmploymentRelationship(p, corp) == "Independent contractor"

# >>What is/was {1}'s employment relationship with {2}? (Options: Employee, Independent contractor, Intern, Other, None)
Tstr EmploymentRelationship(Thing person, Thing corp)
    
# >>When did {1} start working at {2}?
Tdate DateStartedWorkAt(Thing p, Thing corp)

# >>Is {1} a full-time employee at {2}?
Tbool IsFullTimeEmployee(Thing p, Thing corp) =
    set:
    if !IsEmployedBy(p, corp) -> false
    if HoursWorkedPerWeek(p, corp) >= 35 -> true
    if HoursWorkedPerWeek(p, corp) <= 30 -> false
    else Stub()

# >>How many hours per week (on average) does {1} work at {2}?
Tnum HoursWorkedPerWeek(Thing p, Thing corp)
    
# >>How long is/was {1}'s initial probationary period at {2} (in months)?
Tnum InitialProbationLength(Thing p, Thing corp)


# UNEMPLOYMENT COMPENSATION
# Source: http://www.twc.state.tx.us/news/efte/ui_law_qualification_issues.html#dq-layoffs
    
# Disqualified from unemployment insurance
Tbool DQFromUnemploymentInsurance(Thing p, Thing corp) =
    TerminatedFrom(p, corp) |
    ResignedFrom(p, corp) |
    RefusesSuitableWorkWithoutGoodCause(p) |
    IsOnStrikeFrom(p, corp) |
    IsReceivingSeveranceFrom(p, corp).IsEverTrue() |
    IsReceivingWorkersComp(p)

# >>Did {1} refuse suitable work without good cause?    
Tbool RefusesSuitableWorkWithoutGoodCause(Thing p)
    
    
# SEPARATION FROM AN EMPLOYER
# Source: http://www.twc.state.tx.us/news/efte/types_of_work_separations.html

# Medical reasons...
# Strike

# Voluntary separation
Tbool VoluntarilySeparatedFrom(Thing p, Thing corp) =
    ResignedFrom(p, corp) |
    VoluntarilyRetiredFrom(p, corp) |
    ConstructivelyDischargedFrom(p, corp) |
    PresumptivelyResignedFrom(p, corp)
    
# Involuntary separation
Tbool InvoluntarilySeparatedFrom(Thing p, Thing corp) =
    TerminatedFrom(p, corp) |
    ForciblyRetiredFrom(p, corp) |
    ResignedInLieuOfDischargeFrom(p, corp) |
    LaidOffFrom(p, corp) |
    TempJobEndedAt(p, corp) |
    MutuallyAgreedSeparationFrom(p, corp) |
    PresumptivelyTerminatedFrom(p, corp)
    
# Quit/resigned from an employer
Tbool ResignedFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Resignation"

# Resignation in lieu of discharge
Tbool ResignedInLieuOfDischargeFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Resignation in lieu of discharge"

# Discharge or termination for misconduct or "cause" 
Tbool TerminatedFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Termination for misconduct or cause"
    
# Laid off
Tbool LaidOffFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Layoff, reduction in force, or downsizing"
    
# Retired from an employer
Tbool RetiredFrom(Thing p, Thing corp) =
    VoluntarilyRetiredFrom(p, corp) |
    ForciblyRetiredFrom(p, corp)

# Temporary job comes to an end
Tbool TempJobEndedAt(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Temporary job ended"
    
# Voluntarily retired from an employer
Tbool VoluntarilyRetiredFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Voluntary retirement"

# Forced to retire from an employer
Tbool ForciblyRetiredFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Forced retirement"

# Working conditions so intolerable that a reasonable employee would feel forced to resign
Tbool ConstructivelyDischargedFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Constructive discharge"

# Separated from an employer based on mutual agreement
Tbool MutuallyAgreedSeparationFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Mutual agreement"

# Presumptively resigned from an employer
Tbool PresumptivelyTerminatedFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Failed to return following unpaid suspension" &
    LengthOfSuspensionFrom(p, corp) >= 4        # May vary by jurisdiction!
    
# Presumptively resigned from an employer
Tbool PresumptivelyResignedFrom(Thing p, Thing corp) =
    NatureOfSeparation(p, corp) == "Failed to return following unpaid suspension" &
    LengthOfSuspensionFrom(p, corp) < 3        # May vary by jurisdiction!
    
# >>How long (in days) was {1}'s unpaid suspension from {2}?
Tnum LengthOfSuspensionFrom(Thing p, Thing corp) 
    
# >>What was the nature of {1}'s separation from {2}? (Options: Resignation; Resignation in lieu of discharge; Termination for misconduct or cause; Layoff, reduction in force, or downsizing; Temporary job ended; Voluntary retirement; Forced retirement; Constructive discharge; Mutual agreement; Failed to return following unpaid suspension)
Tstr NatureOfSeparation(Thing p, Thing corp)

    
# OTHER    

# >>Is/was {1} receiving severance pay or wages from {2} in lieu of notice?
Tbool IsReceivingSeveranceFrom(Thing p, Thing corp)

# >>Is/was {1} receiving worker's compensation?
Tbool IsReceivingWorkersComp(Thing p) 
    
# >>Is {1} on strike from {2}?
Tbool IsOnStrikeFrom(Thing p, Thing corp) 
    
# >>Is {1} on strike from any employer?
Tbool IsOnStrike(Thing p) 


# SELF-SUPPORT

# >>Does/did {1} manage his or her own financial affairs?
Tbool ManagesOwnAffairs(Thing p)

# TODO: PercentSelfSupport(p) > 50 assumes ManagesOwnAffairs(1) - LHS syntax not parseable yet


# >>To what degree does {1} support himself or herself financially? (Express the answer in percentage points.)
Tnum PercentSelfSupport(Thing p)

# >>Does/did {1} receive public assistance?
Tbool ReceivesPublicAssistance(Thing p)

# >>Is/was {1} physically unfit for employment?
Tbool PhysicallyUnfitForEmployment(Thing p) 

# >>Is/was {1} mentally unfit for employment?
Tbool MentallyUnfitForEmployment(Thing p) 


# RANDOM OCCUPATIONS WITH LEGAL SIGNFICANCE

# >>Is/was {1} a U.S. government employee?
Tbool IsUSGovtEmployee(Thing p)

# >>Is/was {1} a migrant farmworker?
Tbool IsMigrantOrSeasonalFarmworker(Thing p)

# >>At {2}, does/did {1} work as part of an airline flight crew?
Tbool IsAirlineFlightCrew(Thing p, Thing corp) 

# >>Is {1} an employee of the Panama Railroad Company (or its successor in title)?
Tbool IsPanamaRailroadEmployee(Thing p)


# ASSUMPTIONS

IsEmployedBy(1,2) assumes IsEmployed(1)
IsOnStrikeFrom(1,2) assumes IsOnStrike(1)
IsOnStrike(1) assumes IsEmployed(1)
IsUSGovtEmployee(1) assumes IsEmployed(1)
IsPanamaRailroadEmployee(1) assumes IsEmployed(1)


# UNIT TESTS

Test: 257940961
- Things t1, t2
- Econ.PercentSelfSupport(t1) = 20
- Econ.ManagesOwnAffairs(t1).Out =?= "Unstated"

Test: 87584116
- Things t1, t2
- Econ.IsFullTimeEmployee(t1,t2) = Tbool(?)
- Econ.HoursWorkedPerWeek(t1,t2) = 45
- Econ.EmploymentRelationship(t1,t2) = "Intern"
- Econ.IsFullTimeEmployee(t1, t2).Out =?= false

Test: 202197433
- Things t1, t2
- Econ.IsFullTimeEmployee(t1,t2) = Tbool(?)
- Econ.HoursWorkedPerWeek(t1,t2) = 33
- Econ.EmploymentRelationship(t1,t2) = "Employee"
- Econ.IsFullTimeEmployee(t1, t2).Out =?= "Stub"

Test: 936674161
- Things t1, t2
- Econ.IsFullTimeEmployee(t1,t2) = Tbool(?)
- Econ.HoursWorkedPerWeek(t1,t2) = 39
- Econ.EmploymentRelationship(t1,t2) = "Employee"
- Econ.IsFullTimeEmployee(t1, t2).Out =?= true

Test: 526288678
- Things t1, t2
- Econ.IsFullTimeEmployee(t1,t2) = Tbool(?)
- Econ.HoursWorkedPerWeek(t1,t2) = 10
- Econ.EmploymentRelationship(t1,t2) = "Employee"
- Econ.IsFullTimeEmployee(t1, t2).Out =?= false

Test: Tbool1
- Thing p
- Thing c
- Econ.IsFullTimeEmployee(p,c) = true
- Econ.IsFullTimeEmployee(p,c).Out =?= true        

Test: Employ
- Thing p
- Thing c
- Econ.EmploymentRelationship(p,c) = "None"
- Econ.IsEmployedBy(p,c).Out =?= false    

